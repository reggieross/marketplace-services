# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html
Resources:
  CodebuildInternetAccessSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow codebuild to connect to internet/remote repositories
      GroupName: MarketPlaceServicesCodebuildInternetAccessSG
      VpcId: ${self:custom.vpc-id}
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  MigrationServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'MPServices-MigrationPipeline-CodeBuild-ServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'codebuild.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: 'MarketplaceService-MigrationPipeline-CodeBuild-ServiceRole-Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                Resource: '*'
              - Effect: Allow
                Action: SecretsManager:GetSecretValue
                Resource:
                  - !Ref CatalogReplicationClusterMasterSecret
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterfacePermission
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                Resource:
                  - '*'
      Tags:
        - Key: ServiceName
          Value: ${self:service}
  MigrationPipelineSourceCredential:
    Type: 'AWS::CodeBuild::SourceCredential'
    Properties:
      Token: ${self:custom.github-access-token}
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN
  MigrationPipeline:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: false
      Description: Marketplace services migration pipeline
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: node:12.18.3
        ImagePullCredentialsType: SERVICE_ROLE
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: DB_PASSWORD
            Type: SECRETS_MANAGER
            Value: catalog-replication-cluster-master-password:password
          - Name: DB_USERNAME
            Type: SECRETS_MANAGER
            Value: catalog-replication-cluster-master-password:username
          - Name: DB_PORT
            Type: SECRETS_MANAGER
            Value: catalog-replication-cluster-master-password:port
          - Name: DB_HOST
            Type: SECRETS_MANAGER
            Value: catalog-replication-cluster-master-password:host
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: ${self:provider.stage}
      Name: marketplace-services-migration-pipeline-${self:provider.stage}
      Source:
        Auth:
          Type: OAUTH
        GitCloneDepth: 1
        Location: ${self:custom.codebuild.url}
        Type: GITHUB
      ServiceRole:
        Fn::GetAtt: ['MigrationServiceRole', 'Arn']
      VpcConfig:
        SecurityGroupIds:
          - Ref: CatalogReplicationDBAccessSecurityGroup
          - Ref: CodebuildInternetAccessSG
        Subnets:
          - ${self:custom.private-subnet-1}
          - ${self:custom.private-subnet-2}
        VpcId: ${self:custom.vpc-id}
    DependsOn: MigrationPipelineSourceCredential